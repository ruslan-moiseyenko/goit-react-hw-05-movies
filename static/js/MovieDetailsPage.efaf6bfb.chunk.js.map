{"version":3,"file":"static/js/MovieDetailsPage.efaf6bfb.chunk.js","mappings":"iPAKe,SAASA,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAcjB,OAXAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAASL,GACNM,MAAK,SAAAC,GACJR,GAAW,GACXF,EAASU,EAASC,SAEnBC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,QAEf,CAACV,KAGF,8BACGF,GACC,yCAEA,iCACE,iBAAKe,UAAU,YAAf,WACE,oBAAQA,UAAU,YAAYC,QApBzB,kBAAMZ,GAAU,IAoBrB,UACG,IADH,oBAIA,iBAAKW,UAAU,kBAAf,WACE,gBAAKA,UAAU,iBAAf,UACE,gBACEE,IACEnB,EAAMoB,YAAN,0CACuCpB,EAAMoB,aACzC,sCAENC,IAAKrB,EAAMsB,MACXL,UAAU,mBAGd,iBAAKA,UAAU,kBAAf,WACE,wBAAKjB,EAAMsB,SACX,+CAAuBtB,EAAMuB,iBAC7B,iBAAKN,UAAU,kBAAf,WACE,sCACA,uBAAIjB,EAAMwB,eAEZ,gBAAKP,UAAU,iBAAf,SACGjB,EAAMyB,OAAOC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAChB,iBAAMV,UAAU,eAAhB,SACGU,GADiCA,eAO5C,iBAAKV,UAAU,YAAf,WACE,oDACA,gBAAIA,UAAU,aAAd,WACE,eAAIA,UAAU,YAAd,UACE,SAAC,KAAD,CAAMW,GAAE,kBAAaxB,EAAb,SAAR,qBAEF,eAAIa,UAAU,YAAd,UACE,SAAC,KAAD,CAAMW,GAAE,kBAAaxB,EAAb,YAAR,iCAKR,mBACA,SAAC,KAAD","sources":["components/MovieDetailsPage/MovieDetailsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate, Link, Outlet } from 'react-router-dom';\nimport { getMovie } from '../../services/moviesAPI';\nimport './MovieDetailsPage.css';\n\nexport default function MovieDetailsPage() {\n  const [movie, setMovie] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const { movieID } = useParams();\n  const navigate = useNavigate();\n  const goBack = () => navigate(-1);\n\n  useEffect(() => {\n    getMovie(movieID)\n      .then(response => {\n        setLoading(false);\n        setMovie(response.data);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, [movieID]);\n\n  return (\n    <>\n      {loading ? (\n        <div>loading...</div>\n      ) : (\n        <>\n          <div className=\"container\">\n            <button className=\"goBackBtn\" onClick={goBack}>\n              {' '}\n              &larr;Go back\n            </button>\n            <div className=\"movies__wrapper\">\n              <div className=\"movies__poster\">\n                <img\n                  src={\n                    movie.poster_path\n                      ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n                      : 'https://via.placeholder.com/500x750'\n                  }\n                  alt={movie.title}\n                  className=\"movies__img\"\n                />\n              </div>\n              <div className=\"movies__details\">\n                <h1>{movie.title}</h1>\n                <p>User average vote: {movie.vote_average}</p>\n                <div className=\"movie__overview\">\n                  <h2>Overview</h2>\n                  <p>{movie.overview}</p>\n                </div>\n                <div className=\"movies__genres\">\n                  {movie.genres.map(({ name }) => (\n                    <span className=\"movie__genre\" key={name}>\n                      {name}\n                    </span>\n                  ))}\n                </div>\n              </div>\n            </div>\n            <div className=\"add__info\">\n              <h3>Additional information</h3>\n              <ul className=\"add__links\">\n                <li className=\"add__item\">\n                  <Link to={`/movies/${movieID}/cast`}>Cast</Link>\n                </li>\n                <li className=\"add__item\">\n                  <Link to={`/movies/${movieID}/reviews`}>Reviews</Link>\n                </li>\n              </ul>\n            </div>\n          </div>\n          <hr />\n          <Outlet />\n        </>\n      )}\n    </>\n  );\n}\n"],"names":["MovieDetailsPage","useState","movie","setMovie","loading","setLoading","movieID","useParams","navigate","useNavigate","useEffect","getMovie","then","response","data","catch","error","console","log","className","onClick","src","poster_path","alt","title","vote_average","overview","genres","map","name","to"],"sourceRoot":""}